services:
  # FastApi

  # Nginx Service

  # PostgreSql (pgvector)
  pgvector:
    image: pgvector/pgvector:0.8.0-pg17
    container_name: pgvector
    ports:
      - "5432:5432"
    volumes:
      - pgvector_data:/var/lib/postgresql/data
    env_file:
      - env/.env.postgres
    networks:
      - backend
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_MAIN_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # Qdrant (Vector DB)
  qdrant:
    image: qdrant/qdrant:v1.13.6
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    env_file:
      - env/.env.qdrant
    networks:
      - backend
    restart: always
    
  # Promtheus Monitoring
  prometheus:
    image: prom/prometheus:v3.3.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
  # Grafana Dashboard

  # Node Exporter for system metrics

  # PostgreSQL Exporter for PostgreSQL metrics
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:v0.18.0
    container_name: postgres-exporter
    ports:
      - "9187:9187"
    env_file:
      - env/.env.postgres
    depends_on:
      - pgvector
    networks:
      - backend
    restart: always