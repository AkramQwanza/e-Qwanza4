# name: CI

# on:
#   push:
#     branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]

# jobs:
#   backend:
#     name: Backend (Python)
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.11'

#       - name: Cache pip
#         uses: actions/cache@v4
#         with:
#           path: ~/.cache/pip
#           key: ${{ runner.os }}-pip-${{ hashFiles('backend/src/requirements.txt', 'backend/requirements.txt') }}
#           restore-keys: |
#             ${{ runner.os }}-pip-

#       - name: Install backend dependencies
#         working-directory: backend
#         run: |
#           python -m pip install --upgrade pip
#           if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#           if [ -f src/requirements.txt ]; then pip install -r src/requirements.txt; fi

#       - name: Run backend tests
#         working-directory: backend
#         run: |
#           pytest

#       - name: Verify backend compiles
#         run: |
#           python -m compileall -q backend/src || (echo "Python compile errors" && exit 1)

#   frontend:
#     name: Frontend (Node)
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Use Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'
#           cache: 'npm'
#           cache-dependency-path: frontend/package-lock.json

#       - name: Install dependencies
#         working-directory: frontend
#         run: npm ci

#       - name: Build
#         working-directory: frontend
#         run: npm run build


